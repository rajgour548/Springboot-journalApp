#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017

spring.data.mongodb.uri=${mongo_uri}
spring.data.mongodb.database=${db_name}
spring.data.mongodb.auto-index-creation=true
weather.api.key=${weather_api_key}
spring.mail.host=${spring_mail_host}
spring.mail.port=${spring_mail_port}
spring.mail.username=${spring_mail_username}
spring.mail.password=${spring_mail_password}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_SMTP_STARTTLS_ENABLE}
spring.redis.host =${redis_host}
spring.redis.port=${redis_port}
spring.redis.password=${redis_password}
#spring.redis.host=localhost
#spring.redis.port=6379
#logging.level.net.engineeringdigest.journalApp=Trace #-->logs for the level set and all level above the level set are logged
#spring.data.mongodb.username=myusername
#spring.data.mongodb.password=mypassword



brevo.api.key=${brevo_api_key}
brevo.api.url=${brevo_api_url}
brevo.sender.email=${brevo_sender_email}
brevo.sender.name=${brevo_sender_name}



spring.security.oauth2.client.registration.google.client-id=${google_oauth2_client_id}

spring.security.oauth2.client.registration.google.client-secret=${google_oauth2_client_secret}


# ===============================
# Kafka Config
spring.kafka.bootstrap-servers=${kafka_server}
spring.kafka.consumer.group-id=${kafka_consumer_group_id}
spring.kafka.consumer.auto-offset-reset=earliest

# JSON Serialization
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Fail fast if broker unreachable
spring.kafka.producer.retries=0
spring.kafka.producer.properties.max.block.ms=1000
spring.kafka.producer.properties.request.timeout.ms=1000
spring.kafka.producer.properties.delivery.timeout.ms=1000

#--------------------------------------------
#uri to use oauth on browser without playground = https://accounts.google.com/o/oauth2/v2/auth?client_id=602017219434-vg3ume0ocf8te46vamqeak6a6bab95v1.apps.googleusercontent.com&redirect_uri=http://localhost:8080/auth/google/callback&response_type=code&scope=openid%20email%20profile&access_type=offline&prompt=consent




